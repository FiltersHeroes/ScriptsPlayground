diff --git a/scripts/domain-check-2.sh b/scripts/domain-check-2.sh
index c7482d7..e59b0f7 100755
--- a/scripts/domain-check-2.sh
+++ b/scripts/domain-check-2.sh
@@ -402,7 +402,7 @@ check_domain_status()
 {
     local REGISTRAR=""
     # Avoid WHOIS LIMIT EXCEEDED - slowdown our whois client by adding 3 sec
-    sleep 1
+    sleep 3
     # Save the domain since set will trip up the ordering
     DOMAIN=${1}
     TLDTYPE=$(echo ${DOMAIN} | ${AWK} -F. '{print tolower($NF);}')
@@ -547,8 +547,14 @@ check_domain_status()
         REGISTRAR=$(${AWK} '/Registrar:/ && $0 != "" {print $2; exit}' ${WHOIS_TMP})
     fi
 
+    book_blocked=`cat ${WHOIS_TMP} | ${GREP} "after release from the queue, available for registration"`
+
     # If the Registrar is NULL, then we didn't get any data
-    if [ "${REGISTRAR}" = "" ]
+    if [ "${REGISTRAR}" = "" ] && [ ! -z "$book_blocked" ]
+    then
+        prints "$DOMAIN" "B_blocked" "Un" "Un" "Un"
+        return
+    elif [ "${REGISTRAR}" = "" ] && [ -z "$book_blocked" ];
     then
         prints "$DOMAIN" "Unknown" "Unknown" "Unknown" "Unknown"
         return
@@ -806,6 +812,8 @@ check_domain_status()
     DOMAINJULIAN=$(date2julian ${MONTH} ${1#0} ${3})
     DOMAINDIFF=$(date_diff ${NOWJULIAN} ${DOMAINJULIAN})
 
+    suspended=`cat ${WHOIS_TMP} | ${GREP} "is undergoing proceeding"`
+
     if [ ${DOMAINDIFF} -lt 0 ] && [ ${DOMAINJULIAN} -gt 0 ]
     then
         if [ "${ALARM}" == "TRUE" ]
@@ -814,7 +822,9 @@ check_domain_status()
                 | ${MAIL} -s "Domain ${DOMAIN} has expired!" ${ADMIN}
         fi
         prints "${DOMAIN}" "Expired" "${DOMAINDATE}" "${DOMAINDIFF}" "${REGISTRAR}"
-
+    elif [ ! -z "$suspended" ]
+    then
+        prints "${DOMAIN}" "Suspended" "${DOMAINDATE}"  "${DOMAINDIFF}" "${REGISTRAR}"
     elif [ ${DOMAINDIFF} -lt ${WARNDAYS} ] && [ ${DOMAINJULIAN} -gt 0 ]
     then
         if [ "${ALARM}" == "TRUE" ]
@@ -859,7 +869,7 @@ prints()
     if [ "${QUIET}" != "TRUE" ]
     then
         MIN_DATE=$(echo $3 | ${AWK} '{ print $1, $2, $4 }')
-        printf "%-35s %-46s %-8s %-11s %-5s\n" "$1" "$5" "$2" "$MIN_DATE" "$4"
+        printf "%-35s %-46s %-8s %-11s %-5s\n" "$1" "D" "$2" "$MIN_DATE" "$4"
     fi
 }
 
